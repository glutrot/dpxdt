# TODO: Bring this file back to life.

runtime: python27
api_version: 1
threadsafe: true

env_variables:
  SQLALCHEMY_DATABASE_URI: mysql+gaerdbms:///test?instance=foo:bar
  GOOGLE_CLOUD_STORAGE_BUCKET: fake-bucket-name-here/artifacts
  # GOOGLE_OAUTH2_REDIRECT_URI: https://dpxdt-test.appspot.com
  # GOOGLE_OAUTH2_EMAIL_ADDRESS: your_number@developer.gserviceaccount.com
  # GOOGLE_OAUTH2_CLIENT_ID: your_number.apps.googleusercontent.com
  # GOOGLE_OAUTH2_CLIENT_SECRET: my-random-secret-here
  # SESSION_COOKIE_DOMAIN: .dpxdt-test.appspot.com
  # SECRET_KEY: your-session-cookie-key-here
  # MAIL_DEFAULT_SENDER: Depicted <notify@dpxdt-test.appspotmail.com>
  CACHE_TYPE: memcached
  MAIL_SUPPRESS_SEND: True
  MAIL_USE_APPENGINE: True

libraries:
- name: jinja2
  version: "2.6"
- name: markupsafe
  version: "0.15"

inbound_services:
- warmup

includes:
- app_base.yaml

skip_files:
# These are default skip files values
- ^(.*/)?#.*#
- ^(.*/)?.*~
- ^(.*/)?.*\.py[co]
- ^(.*/)?.*/RCS/.*
- ^(.*/)?\..*
# NOTE: In production don't upload Jinja2. The built-in module (from
# "libraries" above) has a c-extension that provides better debugging because
# it can parse stack frames. For local testing with dev_appserver this must
# be commented out.
# - ^(.*/)?lib/jinja2(/.*)?
